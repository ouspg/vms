---
- name: Install base Arch and bootloader
  hosts: all
  vars:
  become: true
  tasks:
      # as of the creation of this arch automation none of the commands under can be removed or arch will break
      # this may change in the future but it is not advised to add or remove anything but changing around the username and password is allowed as long as it is updated across ALL files

      - name: Set system time and date
        ansible.builtin.command: timedatectl

      - name: Initialize and populate pacman keyring
        ansible.builtin.command: pacman-key --init

      - name: Initialize and populate pacman keyring
        ansible.builtin.command: pacman-key --populate archlinux

      - name: Install Arch Linux base system
        ansible.builtin.command: pacstrap /mnt base linux linux-firmware

      - name: Generate fstab
        ansible.builtin.command: genfstab -U /mnt >> /mnt/etc/fstab

      # Bootloader setup
      - name: Install systemd-boot
        ansible.builtin.command: arch-chroot /mnt bootctl install

      - name: Create arch.conf
        ansible.builtin.copy:
            dest: /mnt/boot/loader/entries/arch.conf
            content: |
                title   Arch Linux
                linux   /vmlinuz-linux
                initrd  /initramfs-linux.img
                options root=/dev/sda2 rw
            mode: "0644"

      - name: Create loader.conf
        ansible.builtin.copy:
            dest: /mnt/boot/loader/loader.conf
            content: |
                default arch
                timeout 2
                editor 0
            mode: "0644"

      # Package and system setup
      - name: Install essential packages
        ansible.builtin.command: arch-chroot /mnt pacman -Sy --noconfirm nano sudo networkmanager openssh python

      # - name: Refresh pacman keys
      #   ansible.builtin.raw: |
      #     arch-chroot /mnt bash -c 'pacman-key --init && pacman-key --populate archlinux && pacman-key --refresh-keys'

      # - name: Set correct permissions for pacman keyring directory
      #   ansible.builtin.file:
      #       path: /mnt/etc/pacman.d/gnupg
      #       state: directory
      #       owner: root
      #       group: root
      #       mode: "0700"

      - name: Update system packages
        ansible.builtin.command: arch-chroot /mnt pacman -Syu --noconfirm

      # User setup
      - name: Create arch user and set password
        ansible.builtin.raw: |
            arch-chroot /mnt useradd -m -G wheel arch
            echo "arch:arch" | arch-chroot /mnt chpasswd

      - name: Allow sudo for wheel group
        ansible.builtin.copy:
            content: "%wheel ALL=(ALL) ALL"
            dest: "/mnt/etc/sudoers.d/wheel"
            mode: "0440"

      - name: Ensure user home directory exists
        ansible.builtin.file:
            path: "/mnt/home/arch"
            state: directory
            mode: "0755"

      - name: Ensure systemd network directory exists
        ansible.builtin.file:
            path: "/mnt/etc/systemd/network"
            state: directory
            mode: "0755"

      - name: Ensure dotfiles directory exists
        ansible.builtin.file:
            path: "/mnt/dotfiles"
            state: directory
            mode: "0755"

      - name: Copy dotfiles
        ansible.builtin.copy:
            src: "{{ playbook_dir }}/dotfiles/{{ item }}"
            dest: "/mnt/dotfiles/{{ item }}"
            owner: root
            group: root
            mode: "0644"
        with_items:
            - "wezterm.lua"
            - "20-wired.network"
            - "zsh_extensions.zsh"

      # Enable services
      - name: Enable necessary system services
        ansible.builtin.command: arch-chroot /mnt systemctl enable NetworkManager sshd
